---
defaultBaseImageVersion: '1.0'
properties:
- name: WORKSPACE_NAME
  value: ${WORKSPACE_NAME}
  type: text
- name: API_URL
  value: ${API_URL}
  type: text
- name: API_KEY_DEV
  value: ${API_KEY_DEV}
  type: text
- name: API_KEY_HOM
  value: ${API_KEY_HOM}
  type: text
- name: API_KEY_PRD
  value: ${API_KEY_PRD}
  type: text
- name: API_URL_REG2
  value: ${API_URL_REG2}
  type: text
- name: API_KEY_PRD_REG2
  value: ${API_KEY_PRD_REG2}
  type: text
stages:
- name: Get DEV Workspace
  permission:
    execute: TOOLCHAIN_MEMBERS
  jobs:
  - name: Version
    type: builder
    curatedDockerImage: default
    artifact_dir: ''
    build_type: shell
    script: |
      #!/bin/bash
      echo "Looking for workspace with name ${WORKSPACE_NAME}"

      curl -u "apikey":"$API_KEY_DEV" "$API_URL/v1/workspaces?version=2018-09-20" > workspaces.json
      export SOURCE_WORKSPACE_ID=$(jq -r ".workspaces[] | select(.name == \"${WORKSPACE_NAME}\") | .workspace_id" workspaces.json)

      echo "Source workspace ID is $SOURCE_WORKSPACE_ID"

      echo "Exporting workspace $SOURCE_WORKSPACE_ID..."

      curl -u "apikey":"$API_KEY_DEV" "$API_URL/v1/workspaces/$SOURCE_WORKSPACE_ID?version=2018-09-20&export=true" > export.json
- name: Tests
  inputs:
  - type: job
    stage: Get DEV Workspace
    job: Version
    dir_name: null
  triggers:
  - type: stage
  permission:
    execute: TOOLCHAIN_MEMBERS
  jobs:
  - name: Test
    type: tester
    curatedDockerImage: default
    script: "#!/bin/bash\ncurl -u \"apikey\":\"$API_KEY_DEV\" \"$API_URL/v1/workspaces?version=2018-09-20\" > workspaces.json\n\
    export SOURCE_WORKSPACE_ID=$(jq -r \".workspaces[] | select(.name == \\\"${WORKSPACE_NAME}\\\") | .workspace_id\" workspaces.json)\n\n\
    echo '\nimport json\nfrom os import getenv\nfrom datetime import datetime\nimport requests\n\
    import sys\n\nwksp_id = getenv(\"SOURCE_WORKSPACE_ID\", \"\")\napikey = getenv(\"API_KEY_DEV\", \"\")\nuser = \"apikey\"\n\n\
    headers = {\"Content-type\": \"application/json\", \"Accept\": \"text/plain\"}\n\ndef ts():\n  return \"{:%Y.%m.%d-%H.%M.%S}\".format(datetime.now())\n\n\
    #initialization\ndef init():\n  if wksp_id == \"\" or apikey == \"\":\n    print(ts() + \" - ERROR: Initialization error\")\n    print(ts() + \" - wksp_id: \" + wksp_id)\n    print(ts() + \" - apikey: \" + apikey)\n\
    \    sys.exit(1)\n\ndef send_message():\n  params = (\n    (\"version\", \"2019-02-28\"),\n  )\n  print(ts() + \" - Running test call\")\n\
    \  data = {\"input\": {\"text\":  \"\" }, \"context\": {}}\n  data = json.dumps(data)\n  try:\n\
    \    r = requests.post(\"https://gateway.watsonplatform.net/assistant/api/v1/workspaces/\" + wksp_id + \"/message\", params=params, headers=headers, data=data, auth=(user, apikey))\n\
    \  except:\n    print(ts() + \" - ERROR: Request failed.\")\n    sys.exit(2)\n  if r.status_code != 200:\n    print(ts() + \" - ERROR: Request returned code: \" + str(r.status_code))\n\
    \    sys.exit(3)\n  \n###\n\ninit()\nsend_message()\n\nprint(ts() + \" - Test sucessful!\")\n' > tests.py\n\n\
    export PYTHONPATH=~/.local/lib/;\npython3 -V;\necho $PYTHONPATH;\nmkdir -p $PYTHONPATH;\nexport LC_ALL=en_US.UTF-8\nexport LANG=en_US.UTF-8\n\nuname -na;\nlsb_release -a;\n\ 
    curl \"https://bootstrap.pypa.io/get-pip.py\" -o \"get-pip.py\";\npython3 get-pip.py --user;\npip install requests;\n\
    echo \"Running tests.py\";\npython3 tests.py;\n"
    test_type: simple
- name: Homol
  inputs:
  - type: job
    stage: Get DEV Workspace
    job: Version
    dir_name: null
  permission:
    execute: TOOLCHAIN_MEMBERS
  jobs:
  - name: Deploy
    type: tester
    curatedDockerImage: default
    script: "#!/bin/bash\necho \"Looking for workspace with name ${WORKSPACE_NAME}_HOMOL\
      \ at $API_URL\" \ncurl -u \"apikey\":\"$API_KEY_HOM\" \"$API_URL/v1/workspaces?version=2018-09-20\"\
      \ > workspaces.json\nexport TARGET_WORKSPACE_ID=$(jq -r \".workspaces[] | select(.name\
      \ == \\\"${WORKSPACE_NAME}_HOMOL\\\") | .workspace_id\" workspaces.json)\n\n\
      # Replace template name into JSON\nsed -i -e 's,'\"${WORKSPACE_NAME},${WORKSPACE_NAME}_HOMOL\"\
      ',' export.json\necho \"Target workspace ID is $TARGET_WORKSPACE_ID\"\necho\
      \ \"Importing workspace $TARGET_WORKSPACE_ID...\"\n    \ncurl -H \"Content-Type:\
      \ application/json\" -X POST -d @export.json -u \"apikey\":\"$API_KEY_HOM\"\
      \ \"$API_URL/v1/workspaces/$TARGET_WORKSPACE_ID?version=2018-09-20\""
    test_type: simple
- name: Prod
  inputs:
  - type: job
    stage: Get DEV Workspace
    job: Version
    dir_name: null
  permission:
    execute: TOOLCHAIN_MEMBERS
  jobs:
  - name: Deploy
    type: tester
    curatedDockerImage: default
    script: "#!/bin/bash\necho \"Looking for workspace\
      \ with name ${WORKSPACE_NAME}_PROD at $API_URL\" \ncurl -u \"apikey\":\"$API_KEY_PROD\"\
      \ \"$API_URL/v1/workspaces?version=2018-09-20\" > workspaces.json\nexport TARGET_WORKSPACE_ID=$(jq\
      \ -r \".workspaces[] | select(.name == \\\"${WORKSPACE_NAME}_PROD\\\") | .workspace_id\"\
      \ workspaces.json)\n\n# Replace template name into JSON\nsed -i -e 's,'\"${WORKSPACE_NAME},${WORKSPACE_NAME}_PROD\"\
      ',' export.json\necho \"Target workspace ID is $TARGET_WORKSPACE_ID\"\necho\
      \ \"Importing workspace $TARGET_WORKSPACE_ID...\"\n    \ncurl -H \"Content-Type:\
      \ application/json\" -X POST -d @export.json -u \"apikey\":\"$API_KEY_PRD\"\
      \ \"$API_URL/v1/workspaces/$TARGET_WORKSPACE_ID?version=2018-09-20\""
    test_type: simple
hooks:
- enabled: true
  label: null
  ssl_enabled: true
  url: https://devops-api.us-south.devops.cloud.ibm.com/v1/messaging/webhook/publish
